
/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package principal;

import principal.TelaHabilidades;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.Random;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JCheckBox;
import javax.swing.JOptionPane;
 
/**
 *
 * @author eduar
 */
public class CriarPersonagem1 extends javax.swing.JFrame {
        int valorMente = 0;
        int valorFortitude = 0;
        int valorAgilidade = 0;
        int valorSentidos = 0;
        int valorPoder = 0;
         int valorMenteB = 0;
        int valorFortitudeB = 0;
        int valorAgilidadeB = 0;
        int valorSentidosB = 0;
        int valorPoderB = 0;
        int atributos = 4;
        String bonus = "";
        String valorBonus1 = "x";
        String valorBonus2 = "x";
        String aspecto1 = "";
        String aspecto2 = "";
        String aspecto3 = "";
        String aspecto4 = "";
        String aspecto5 = "";
        String aspecto6 = "";
        String MSGtroca = "";
        int troca = 0;
        
        
                
        
        
   
    /**
     * Creates new form CriarPersonagem1
     */
    public CriarPersonagem1() {
        initComponents();
        jButton3.setVisible(false);
        jCheckBox1.setVisible(false);
        jCheckBox2.setVisible(false);
        jCheckBox3.setVisible(false);
        jCheckBox4.setVisible(false);
        jCheckBox5.setVisible(false);
        jCheckBox6.setVisible(false);
         jButton2.setVisible(false);
              
                
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        valorNome = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        valorIdade = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        valorGenero = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        adicionarMente = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        diminuirMente = new javax.swing.JButton();
        aumentarSentidos = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        diminuirSentidos = new javax.swing.JButton();
        aumentarAgilidade = new javax.swing.JButton();
        aumentarFortitude = new javax.swing.JButton();
        diminuirAgilidade = new javax.swing.JButton();
        diminuirFortitude = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        valorAparencia = new javax.swing.JTextArea();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        aumentarPoder = new javax.swing.JButton();
        diminuirPoder = new javax.swing.JButton();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel18 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jCheckBox1 = new javax.swing.JCheckBox();
        jCheckBox2 = new javax.swing.JCheckBox();
        jComboBox2 = new javax.swing.JComboBox<>();
        jCheckBox3 = new javax.swing.JCheckBox();
        jCheckBox4 = new javax.swing.JCheckBox();
        jCheckBox5 = new javax.swing.JCheckBox();
        jCheckBox6 = new javax.swing.JCheckBox();
        jButton2 = new javax.swing.JButton();
        jLabel19 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setResizable(false);

        jLabel1.setText("Nome:");

        valorNome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                valorNomeActionPerformed(evt);
            }
        });

        jLabel2.setText("Idade:");

        jLabel3.setText("Gênero:");

        valorGenero.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                valorGeneroActionPerformed(evt);
            }
        });

        jLabel4.setText("Aparência:");

        jLabel5.setText("Atributos disponiveis:");

        adicionarMente.setText("+");
        adicionarMente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                adicionarMenteActionPerformed(evt);
            }
        });

        jLabel6.setText("   Mente");

        jLabel7.setText("   Agilidade");

        jLabel8.setText("Fortitude");

        jLabel9.setText("Sentidos");

        diminuirMente.setText("-");
        diminuirMente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                diminuirMenteActionPerformed(evt);
            }
        });

        aumentarSentidos.setText("+");
        aumentarSentidos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aumentarSentidosActionPerformed(evt);
            }
        });

        jLabel10.setText("Poder");

        diminuirSentidos.setText("-");
        diminuirSentidos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                diminuirSentidosActionPerformed(evt);
            }
        });

        aumentarAgilidade.setText("+");
        aumentarAgilidade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aumentarAgilidadeActionPerformed(evt);
            }
        });

        aumentarFortitude.setText("+");
        aumentarFortitude.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aumentarFortitudeActionPerformed(evt);
            }
        });

        diminuirAgilidade.setText("-");
        diminuirAgilidade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                diminuirAgilidadeActionPerformed(evt);
            }
        });

        diminuirFortitude.setText("-");
        diminuirFortitude.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                diminuirFortitudeActionPerformed(evt);
            }
        });

        jScrollPane1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane1.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        valorAparencia.setColumns(20);
        valorAparencia.setRows(5);
        valorAparencia.setAutoscrolls(false);
        jScrollPane1.setViewportView(valorAparencia);

        jLabel11.setText(String.valueOf(valorMente));

        jLabel12.setText(String.valueOf(valorAgilidade));

        jLabel13.setText(String.valueOf(valorSentidos));

        jLabel14.setText(String.valueOf(valorFortitude));

        jLabel15.setText(String.valueOf(valorPoder));

        aumentarPoder.setText("+");
        aumentarPoder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aumentarPoderActionPerformed(evt);
            }
        });

        diminuirPoder.setText("-");
        diminuirPoder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                diminuirPoderActionPerformed(evt);
            }
        });

        jLabel16.setText(String.valueOf(atributos));

        jLabel17.setText("Classe: ");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Cavaleiro", "Arauto das Chamas", "Carrasco", "Guardião","Caçador de Sangue","Ninja","Artista Marcial","Xamã","Ilusionista","Atirador","Evolucionista","Feiticeiro","Necromante", "Sacerdote","Alquimista","Cozinheiro","Mestre de Matrizes" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jLabel18.setText("Bonus:\n" + bonus);

        jButton1.setText("mostrar Habilidades");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jCheckBox1.setText(aspecto1);
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });

        jCheckBox2.setText(aspecto2);
        jCheckBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox2ActionPerformed(evt);
            }
        });

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Explorador", "Caçador de Ruínas", "Mercador Ambulante", "Forasteiro de Terras Distantes",
            "Historiador", "Caçador de Tesouros", "Sobrevivente do Inesperado", "Estudioso Curioso",
            "Herói do Povo", "Nobre Decaído", "Trapaceiro", "Artista de Circo"}));
jComboBox2.addActionListener(new java.awt.event.ActionListener() {
    public void actionPerformed(java.awt.event.ActionEvent evt) {
        jComboBox2ActionPerformed(evt);
    }
    });

    jCheckBox3.setText(aspecto3);
    jCheckBox3.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jCheckBox3ActionPerformed(evt);
        }
    });

    jCheckBox4.setText(aspecto4);
    jCheckBox4.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jCheckBox4ActionPerformed(evt);
        }
    });

    jCheckBox5.setText(aspecto5);
    jCheckBox5.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jCheckBox5ActionPerformed(evt);
        }
    });

    jCheckBox6.setText(aspecto6);
    jCheckBox6.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jCheckBox6ActionPerformed(evt);
        }
    });

    jButton2.setText("MOSTRAR ASPECTOS");
    jButton2.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButton2ActionPerformed(evt);
        }
    });

    jLabel19.setText("Percursos: ");

    jButton3.setText(String.valueOf(MSGtroca));
    jButton3.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButton3ActionPerformed(evt);
        }
    });

    jButton4.setText("salvar");
    jButton4.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButton4ActionPerformed(evt);
        }
    });

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(layout.createSequentialGroup()
            .addContainerGap()
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addComponent(jLabel5)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 625, Short.MAX_VALUE))
                .addGroup(layout.createSequentialGroup()
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 345, Short.MAX_VALUE)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(valorGenero))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(6, 6, 6)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(valorNome)
                                            .addComponent(valorIdade)))))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(22, 22, 22)
                                    .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(60, 60, 60)
                                    .addComponent(jButton1))
                                .addGroup(layout.createSequentialGroup()
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jButton4)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(jLabel18, javax.swing.GroupLayout.DEFAULT_SIZE, 378, Short.MAX_VALUE)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(17, 17, 17)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jCheckBox2)
                                                    .addComponent(jCheckBox3)
                                                    .addComponent(jCheckBox1)
                                                    .addComponent(jCheckBox4)
                                                    .addComponent(jCheckBox6)
                                                    .addComponent(jCheckBox5)
                                                    .addComponent(jButton2)
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addGap(28, 28, 28)
                                                        .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                            .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(6, 6, 6)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addComponent(adicionarMente)
                                                .addGap(12, 12, 12)
                                                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(diminuirMente))
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addComponent(aumentarFortitude)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(diminuirFortitude))
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addComponent(aumentarAgilidade)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(diminuirAgilidade))
                                            .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(67, 67, 67)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(aumentarPoder)
                                            .addComponent(aumentarSentidos))
                                        .addGap(6, 6, 6))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(114, 114, 114)))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(116, 116, 116)))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(diminuirPoder))
                                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(6, 6, 6)
                                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(diminuirSentidos)))))
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
    );
    layout.setVerticalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(layout.createSequentialGroup()
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jLabel1)
                .addComponent(valorNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(jLabel17)
                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2)
                        .addComponent(valorIdade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel3)
                        .addComponent(valorGenero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(jLabel4))
                .addGroup(layout.createSequentialGroup()
                    .addGap(22, 22, 22)
                    .addComponent(jLabel18)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addComponent(jButton3)))
            .addGap(16, 16, 16)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(18, 18, 18)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel5)
                        .addComponent(jLabel16))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(6, 6, 6)
                            .addComponent(jLabel9)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel13)
                                .addComponent(aumentarSentidos)
                                .addComponent(diminuirSentidos))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(jLabel10)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel15)
                                .addComponent(aumentarPoder)
                                .addComponent(diminuirPoder)))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(12, 12, 12)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(diminuirMente)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(adicionarMente)
                                    .addComponent(jLabel11)))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(diminuirFortitude)
                                .addComponent(jLabel14)
                                .addComponent(aumentarFortitude))))
                    .addGap(18, 18, 18)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(diminuirAgilidade)
                            .addComponent(jButton4))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel12)
                            .addComponent(aumentarAgilidade))))
                .addGroup(layout.createSequentialGroup()
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel19))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(jCheckBox1)
                    .addGap(12, 12, 12)
                    .addComponent(jCheckBox2)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addComponent(jCheckBox3)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addComponent(jCheckBox4)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addComponent(jCheckBox5)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addComponent(jCheckBox6)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)))
            .addContainerGap(75, Short.MAX_VALUE))
    );

    setSize(new java.awt.Dimension(814, 528));
    setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private String string;

    /**
     * Get the value of string
     *
     * @return the value of string
     */
    public String getString() {
        return string;
    }

    /**
     * Set the value of string
     *
     * @param string new value of string
     */
    public void setString(String string) {
        this.string = string;
    }

    private void valorGeneroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_valorGeneroActionPerformed
String genero = valorGenero.getText();
    }//GEN-LAST:event_valorGeneroActionPerformed

    private void adicionarMenteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_adicionarMenteActionPerformed
        if( atributos > 0){
            valorMente++;
            atributos--;
            jLabel11.setText(String.valueOf(valorMente + valorMenteB)); 
            jLabel16.setText(String.valueOf(atributos));
        }
    }//GEN-LAST:event_adicionarMenteActionPerformed

    private void diminuirMenteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_diminuirMenteActionPerformed
        if(valorMente > 0){
            valorMente--;
            atributos++;
            jLabel11.setText(String.valueOf(valorMente + valorMenteB)); 
            jLabel16.setText(String.valueOf(atributos));
        }
    }//GEN-LAST:event_diminuirMenteActionPerformed

    private void aumentarSentidosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aumentarSentidosActionPerformed
       if( atributos > 0){
            valorSentidos++;
            atributos--;
            jLabel13.setText(String.valueOf(valorSentidos + valorSentidosB)); 
             jLabel16.setText(String.valueOf(atributos));
        }
    }//GEN-LAST:event_aumentarSentidosActionPerformed

    private void diminuirSentidosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_diminuirSentidosActionPerformed
        if(valorSentidos > 0){
            valorSentidos--;
             atributos++;
            jLabel13.setText(String.valueOf(valorSentidos + valorSentidosB));
             jLabel16.setText(String.valueOf(atributos));
        }
    }//GEN-LAST:event_diminuirSentidosActionPerformed

    private void diminuirFortitudeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_diminuirFortitudeActionPerformed
      if(valorFortitude > 0){
            valorFortitude--;
             atributos++;
             jLabel14.setText(String.valueOf(valorFortitude= valorFortitudeB));
             jLabel16.setText(String.valueOf(atributos));
            
        }
    }//GEN-LAST:event_diminuirFortitudeActionPerformed

    private void aumentarPoderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aumentarPoderActionPerformed
       if( atributos > 0){
            valorPoder++;
            atributos--;
            jLabel15.setText(String.valueOf(valorPoder + valorPoderB));
             jLabel16.setText(String.valueOf(atributos));
        }
    }//GEN-LAST:event_aumentarPoderActionPerformed

    private void aumentarFortitudeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aumentarFortitudeActionPerformed
        if( atributos > 0){
            valorFortitude++;
            atributos--;
             jLabel14.setText(String.valueOf(valorFortitude + valorFortitudeB));
             jLabel16.setText(String.valueOf(atributos));
            
        }
    }//GEN-LAST:event_aumentarFortitudeActionPerformed

    private void diminuirPoderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_diminuirPoderActionPerformed
       if( valorPoder > 0){
            valorPoder--;
            atributos++;
            jLabel15.setText(String.valueOf(valorPoder + valorPoderB));
             jLabel16.setText(String.valueOf(atributos));
        }
    }//GEN-LAST:event_diminuirPoderActionPerformed

    private void aumentarAgilidadeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aumentarAgilidadeActionPerformed
       if( atributos > 0){
            valorAgilidade++;
            atributos--;
            jLabel12.setText(String.valueOf(valorAgilidade + valorAgilidadeB));
             jLabel16.setText(String.valueOf(atributos));
        }
    }//GEN-LAST:event_aumentarAgilidadeActionPerformed

    private void diminuirAgilidadeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_diminuirAgilidadeActionPerformed
        if(valorAgilidade > 0){
            valorAgilidade--;
            atributos++;
            jLabel12.setText(String.valueOf(valorAgilidade + valorAgilidadeB ));
             jLabel16.setText(String.valueOf(atributos));
        }
    }//GEN-LAST:event_diminuirAgilidadeActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        String classeEscolhida = (String) jComboBox1.getSelectedItem();
        troca = 0;
        jButton3.setVisible(false);
        if(valorBonus1 == "M") {
        valorMenteB = valorMenteB- 1;
        } 
        if(valorBonus2 == "M") {
        valorMenteB = valorMenteB - 1;
        }
        if(valorBonus1 == "A") {
        valorAgilidadeB = valorAgilidadeB - 1;
        } 
        if(valorBonus2 == "A") {
        valorAgilidadeB = valorAgilidadeB - 1;
        }
        if(valorBonus1 == "F") {
        valorFortitudeB = valorFortitudeB - 1;
        } 
        if(valorBonus2 == "F") {
         valorFortitudeB = valorFortitudeB - 1;
        }
        if(valorBonus1 == "S") {
        valorSentidosB = valorSentidosB - 1;
        } 
        if(valorBonus2 == "S") {
        valorSentidosB = valorSentidosB - 1;
        }
        if(valorBonus1 == "P") {
        valorPoderB = valorPoderB - 1;
        } 
        if(valorBonus2 == "P") {
        valorPoderB = valorPoderB - 1;
        }
        if(valorBonus1 == "E" && valorBonus2 == "E"){
        valorPoderB = valorPoderB - 1;
        valorSentidosB = valorSentidosB - 1;
        valorAgilidadeB = valorAgilidadeB - 1;
        valorFortitudeB = valorFortitudeB - 1;
        valorMenteB = valorMenteB - 1;
        }
        
        
        
        
        
        //}
        switch (classeEscolhida) {
            case "Cavaleiro":
                bonus = "Fortitude: +2 ou Agilidade: +2";
                valorBonus1 = "F";
                valorBonus2 = "F";
                valorFortitudeB += 2;
                MSGtroca = "Fortitude: + 2";
                jButton3.setVisible(true);
                break;
            case "Arauto das Chamas":
                bonus = "Agilidade ou Fortitude: +1, Poder: +1";
                valorBonus1 = "A";
                valorBonus2 = "P";
                valorAgilidadeB += 1;
                valorPoderB += 1;
                MSGtroca = "Agilidade + 1";
                jButton3.setVisible(true);

                break;
            case "Carrasco":
                bonus = "Fortitude: +1, Poder: +1";
                valorBonus1 = "F";
                valorBonus2 = "P";
                valorFortitudeB += 1;
                valorPoderB += 1;
                break;
            case "Guardião":
                bonus = " Fortitude: +2";
                valorBonus1 = "F";
                valorBonus2 = "F";
                valorFortitudeB += 2;
                break;
            case "Caçador de Sangue":
                bonus = "Agilidade: +1, Sentidos: +1";
                valorBonus1 = "A";
                valorBonus2 = "S";
                valorAgilidadeB += 1;
                valorSentidosB += 1;
                break;
            case "Ninja":
                bonus = "Agilidade: +1, Sentidos: +1";
                valorBonus1 = "A";
                valorBonus2 = "S";
                valorAgilidadeB += 1;
                valorSentidosB += 1;
                break;
            case "Artista Marcial":
                bonus = " Atributo principal baseado na arte marcial: +1, Poder: +1";
                valorBonus1 = "P";
                valorBonus2 = "P";
                valorPoderB += 1;
                valorPoderB += 1;
                MSGtroca = "Cânone Supremo do Demônio Celestial, Poder + 1";
                jButton3.setVisible(true);
                break;
            case "Xamã":
                bonus = "Agilidade: +1, Poder: +1";
                valorBonus1 = "A";
                valorBonus2 = "P";
                valorAgilidadeB += 1;
                valorPoderB += 1;
                break;
            case "Ilusionista":
                bonus = "Agilidade: +1, Poder: +1";
                valorBonus1 = "A";
                valorBonus2 = "P";
                valorAgilidadeB += 1;
                valorPoderB += 1;
                break;
            case "Atirador":
                bonus = "Sentidos: +1, Agilidade: +1";
                valorBonus1 = "A";
                valorBonus2 = "S";
                valorAgilidadeB += 1;
                valorSentidosB += 1;
                break;
            case "Evolucionista":
                bonus = "+1 em todos os atributos";
                valorBonus1 = "E";
                valorBonus2 = "E";
                valorAgilidadeB += 1;
                valorPoderB += 1;
                valorFortitudeB += 1;
                valorSentidosB += 1;
                valorMenteB += 1;
                break;
            case "Feiticeiro":
                bonus = "Poder: +1, Mente: +1";
                valorBonus1 = "P";
                valorBonus2 = "M";
                valorPoderB += 1;
                valorMenteB += 1;
                break;
            case "Necromante":
                 bonus = "Poder: +1, Mente: +1";
                valorBonus1 = "P";
                valorBonus2 = "M";
                valorPoderB += 1;
                valorMenteB += 1;
                break;
            case "Sacerdote":
                 bonus = "Poder: +1, Mente: +1";
                valorBonus1 = "P";
                valorBonus2 = "M";
                valorPoderB += 1;
                valorMenteB += 1;
                break;
            case "Alquimista":
                 bonus = "Poder: +1, Mente: +1";
                valorBonus1 = "P";
                valorBonus2 = "M";
                valorPoderB += 1;
                valorMenteB += 1;
                break;
            case "Cozinheiro":
                bonus = "Fortitude: +1, Mente: +1";
                 valorBonus1 = "F";
                valorBonus2 = "M";
                valorFortitudeB += 1;
                valorMenteB += 1;
                break;
            case "Mestre de Matrizes":
                 bonus = "Poder: +1, Mente: +1";
                valorBonus1 = "P";
                valorBonus2 = "M";
                valorPoderB += 1;
                valorMenteB += 1;
                break;
            default:
                bonus = "nada"; }
        jLabel18.setText("Bonus:  "+ bonus);
        jLabel11.setText(String.valueOf(valorMente + valorMenteB ));
        jLabel12.setText(String.valueOf(valorAgilidade + valorAgilidadeB));
        jLabel13.setText(String.valueOf(valorSentidos + valorSentidosB));
        jLabel14.setText(String.valueOf(valorFortitude + valorFortitudeB));
        jLabel15.setText(String.valueOf(valorPoder + valorPoderB));
        jButton3.setText(String.valueOf(MSGtroca));
         }//GEN-LAST:event_jComboBox1ActionPerformed

    private void valorNomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_valorNomeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_valorNomeActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        String classeEscolhida = (String) jComboBox1.getSelectedItem();

    // Abre a nova tela passando a classe escolhida
    TelaHabilidades telahab = new TelaHabilidades(classeEscolhida);
    telahab.setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
    String pastaSelecionada = (String) jComboBox2.getSelectedItem();
    if (pastaSelecionada != null && !pastaSelecionada.isEmpty()) {
        TelaAspectos tela = new TelaAspectos(pastaSelecionada);
        tela.setVisible(true);
    } else {
        JOptionPane.showMessageDialog(null, "Aspectos não disponiveis.");
    }
    
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
     JCheckBox[] checkBoxes = { jCheckBox1, jCheckBox2, jCheckBox3, jCheckBox4, jCheckBox5, jCheckBox6 };

// Adiciona o listener a todos
for (JCheckBox cb : checkBoxes) {
    cb.addItemListener(e -> {
        int selecionados = 0;

        // Conta quantos estão selecionados
        for (JCheckBox c : checkBoxes) {
            if (c.isSelected()) {
                selecionados++;
            }
        }

        // Se mais de 2, cancela o último clique
        if (selecionados > 2) {
            // Desmarca o que acabou de ser clicado
            JCheckBox fonte = (JCheckBox) e.getSource();
            fonte.setSelected(false);
            JOptionPane.showMessageDialog(null, "Você só pode selecionar até 2 aspectos.");
        }
    });
}  
    }//GEN-LAST:event_jCheckBox1ActionPerformed

    private void jCheckBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox2ActionPerformed
           JCheckBox[] checkBoxes = { jCheckBox1, jCheckBox2, jCheckBox3, jCheckBox4, jCheckBox5, jCheckBox6 };

// Adiciona o listener a todos
for (JCheckBox cb : checkBoxes) {
    cb.addItemListener(e -> {
        int selecionados = 0;

        // Conta quantos estão selecionados
        for (JCheckBox c : checkBoxes) {
            if (c.isSelected()) {
                selecionados++;
            }
        }

        // Se mais de 2, cancela o último clique
        if (selecionados > 2) {
            // Desmarca o que acabou de ser clicado
            JCheckBox fonte = (JCheckBox) e.getSource();
            fonte.setSelected(false);
            JOptionPane.showMessageDialog(null, "Você só pode selecionar até 2 aspectos.");
        }
    });
}
    }//GEN-LAST:event_jCheckBox2ActionPerformed

    private void jCheckBox3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox3ActionPerformed
     JCheckBox[] checkBoxes = { jCheckBox1, jCheckBox2, jCheckBox3, jCheckBox4, jCheckBox5, jCheckBox6 };

// Adiciona o listener a todos
for (JCheckBox cb : checkBoxes) {
    cb.addItemListener(e -> {
        int selecionados = 0;

        // Conta quantos estão selecionados
        for (JCheckBox c : checkBoxes) {
            if (c.isSelected()) {
                selecionados++;
            }
        }

        // Se mais de 2, cancela o último clique
        if (selecionados > 2) {
            // Desmarca o que acabou de ser clicado
            JCheckBox fonte = (JCheckBox) e.getSource();
            fonte.setSelected(false);
            JOptionPane.showMessageDialog(null, "Você só pode selecionar até 2 aspectos.");
        }
    });
}
    }//GEN-LAST:event_jCheckBox3ActionPerformed

    private void jCheckBox4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox4ActionPerformed
     JCheckBox[] checkBoxes = { jCheckBox1, jCheckBox2, jCheckBox3, jCheckBox4, jCheckBox5, jCheckBox6 };

// Adiciona o listener a todos
for (JCheckBox cb : checkBoxes) {
    cb.addItemListener(e -> {
        int selecionados = 0;

        // Conta quantos estão selecionados
        for (JCheckBox c : checkBoxes) {
            if (c.isSelected()) {
                selecionados++;
            }
        }

        // Se mais de 2, cancela o último clique
        if (selecionados > 2) {
            // Desmarca o que acabou de ser clicado
            JCheckBox fonte = (JCheckBox) e.getSource();
            fonte.setSelected(false);
            JOptionPane.showMessageDialog(null, "Você só pode selecionar até 2 aspectos.");
        }
    });
}
    }//GEN-LAST:event_jCheckBox4ActionPerformed

    private void jCheckBox5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox5ActionPerformed
     JCheckBox[] checkBoxes = { jCheckBox1, jCheckBox2, jCheckBox3, jCheckBox4, jCheckBox5, jCheckBox6 };

// Adiciona o listener a todos
for (JCheckBox cb : checkBoxes) {
    cb.addItemListener(e -> {
        int selecionados = 0;

        // Conta quantos estão selecionados
        for (JCheckBox c : checkBoxes) {
            if (c.isSelected()) {
                selecionados++;
            }
        }

        // Se mais de 2, cancela o último clique
        if (selecionados > 2) {
            // Desmarca o que acabou de ser clicado
            JCheckBox fonte = (JCheckBox) e.getSource();
            fonte.setSelected(false);
            JOptionPane.showMessageDialog(null, "Você só pode selecionar até 2 aspectos.");
        }
    });
}
    }//GEN-LAST:event_jCheckBox5ActionPerformed

    private void jCheckBox6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox6ActionPerformed
     JCheckBox[] checkBoxes = { jCheckBox1, jCheckBox2, jCheckBox3, jCheckBox4, jCheckBox5, jCheckBox6 };

// Adiciona o listener a todos
for (JCheckBox cb : checkBoxes) {
    cb.addItemListener(e -> {
        int selecionados = 0;

        // Conta quantos estão selecionados
        for (JCheckBox c : checkBoxes) {
            if (c.isSelected()) {
                selecionados++;
            }
        }

        // Se mais de 2, cancela o último clique
        if (selecionados > 2) {
            // Desmarca o que acabou de ser clicado
            JCheckBox fonte = (JCheckBox) e.getSource();
            fonte.setSelected(false);
            JOptionPane.showMessageDialog(null, "Você só pode selecionar até 2 aspectos.");
        }
    });
}
    }//GEN-LAST:event_jCheckBox6ActionPerformed

    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed
    String percurso = (String) jComboBox2.getSelectedItem();
        jCheckBox1.setVisible(true);
        jCheckBox2.setVisible(true);
        jCheckBox3.setVisible(true);
        jCheckBox4.setVisible(true);
        jCheckBox5.setVisible(true);
        jCheckBox6.setVisible(true);
        jButton2.setVisible(true);
        switch (percurso) {
    case "Explorador":
        aspecto1 = "Pé de Areia";
        aspecto2 = "Ar de Mudança";
        aspecto3 = "Nascido da Seca";
        aspecto4 = "Faro por Água";
        aspecto5 = "Caminho de Areia";
        aspecto6 = "Sombra do Deserto";
        break;

    case "Caçador de Ruínas":
        aspecto1 = "Olhos do Passado";
        aspecto2 = "Desarmador";
        aspecto3 = "Instinto de Perigo";
        aspecto4 = "Mapa Mental";
        aspecto5 = "Mãos Leves";
        aspecto6 = "Sons do Passado";
        break;

    case "Mercador Ambulante":
        aspecto1 = "Olho para Valor";
        aspecto2 = "Instinto de Risco";
        aspecto3 = "Lábia Mercante";
        aspecto4 = "Rede de Contatos";
        aspecto5 = "Carga Leve";
        aspecto6 = "Esconderijo Improvável";
        break;

    case "Forasteiro de Terras Distantes":
        aspecto1 = "Idioma Exótico";
        aspecto2 = "Senso de Maravilha";
        aspecto3 = "Adaptabilidade";
        aspecto4 = "Rituais Distantes";
        aspecto5 = "Pé de Viajante";
        aspecto6 = "Cultura Diferente";
        break;

    case "Historiador":
        aspecto1 = "Sede de Conhecimento";
        aspecto2 = "Memória Viva";
        aspecto3 = "Intuição Histórica";
        aspecto4 = "Olhos do Leitor";
        aspecto5 = "Conhecimento";
        aspecto6 = "Marca Páginas";
        break;

    case "Caçador de Tesouros":
        aspecto1 = "Faro de Riqueza";
        aspecto2 = "Perito em Armadilhas";
        aspecto3 = "Toque Cauteloso";
        aspecto4 = "Olhos dourados";
        aspecto5 = "Coragem Inabalável";
        aspecto6 = "Febre do Ouro";
        break;

    case "Sobrevivente do Inesperado":
        aspecto1 = "Sorte Improvável";
        aspecto2 = "Resiliência Brutal";
        aspecto3 = "Nascido na Adversidade";
        aspecto4 = "Conhecimento Instintivo";
        aspecto5 = "Carapaça Emocional";
        aspecto6 = "Persistência Selvagem";
        break;

    case "Estudioso Curioso":
        aspecto1 = "Mente Afiada";
        aspecto2 = "Poliglota";
        aspecto3 = "Entusiasta das Histórias";
        aspecto4 = "Leitura Rápida";
        aspecto5 = "Olhos Abertos";
        aspecto6 = "Conhecimento Específico";
        break;

    case "Herói do Povo":
        aspecto1 = "Moral Elevada";
        aspecto2 = "Fervor";
        aspecto3 = "Despertar";
        aspecto4 = "Símbolo";
        aspecto5 = "Poder do Povo";
        aspecto6 = "Ascenção";
        break;

    case "Nobre Decaído":
        aspecto1 = "Nobreza";
        aspecto2 = "Vontade Inabalável";
        aspecto3 = "Esquema de Nobreza";
        aspecto4 = "Poder & Influência";
        aspecto5 = "Provocação Óbvia";
        aspecto6 = "Propriedade";
        break;

    case "Trapaceiro":
        aspecto1 = "JOKER";
        aspecto2 = "Ás de Espadas";
        aspecto3 = "Mãos Leves";
        aspecto4 = "Poker Face";
        aspecto5 = "Língua de Prata";
        aspecto6 = "Artimanha";
        break;

    case "Artista de Circo":
        aspecto1 = "Mestre Malabarista";
        aspecto2 = "Mestre de Mistério";
        aspecto3 = "Acrobata";
        aspecto4 = "Piromaníaco";
        aspecto5 = "Senhor Incrível";
        aspecto6 = "Brincalhão";
        break;

    default:
        aspecto1 = aspecto2 = aspecto3 = aspecto4 = aspecto5 = aspecto6 = "Nenhum";
    break;
}
        jCheckBox1.setText(aspecto1);
        jCheckBox2.setText(aspecto2);
        jCheckBox3.setText(aspecto3);
        jCheckBox4.setText(aspecto4);
        jCheckBox5.setText(aspecto5);
        jCheckBox6.setText(aspecto6);
        

    }//GEN-LAST:event_jComboBox2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
    String classeEscolhida = (String) jComboBox1.getSelectedItem();
 
          switch (classeEscolhida) {
                case "Artista Marcial" -> {
                    if (troca == 0) {
                        troca = 1;
                        valorBonus1 = "A";
                        valorAgilidadeB += 1;
                        valorPoderB -= 1;
                        MSGtroca = "Templo Celestial do Trovão, Agilidade + 1";
                    }   
                    else if (troca == 1) {
                        troca = 2;
                        valorBonus1 = "S";
                        valorSentidosB += 1;
                        valorAgilidadeB -= 1;
                        MSGtroca = "Olho Divino do Vazio, Sentidos + 1";
                    }   
                    else if (troca == 2) {
                        troca = 3;
                        valorBonus1 = "F";
                        valorFortitudeB += 1;
                        valorSentidosB -= 1;
                        MSGtroca = "12 Caminhos da Destruição, Fortitude + 1";
                    }   
                    else if (troca == 3) {
                        troca = 0;
                        valorBonus1 = "P";
                        valorPoderB += 1;
                        valorFortitudeB -= 1;
                        MSGtroca = "Cânone Supremo do Demônio Celestial, Poder + 1";
                    }
                }
                case "Arauto das Chamas" -> {
                    if (troca == 0) {
                        troca = 1;
                        valorBonus1 = "F";
                        valorFortitudeB += 1;
                        valorAgilidadeB -= 1;
                        MSGtroca = "Fortitude + 1";
                    }
                    else if (troca == 1) {
                        troca = 0;
                        valorBonus1 = "A";
                        valorAgilidadeB += 1;
                        valorFortitudeB -= 1;
                        MSGtroca = "Agilidade + 1";
                    }
                }
                case "Cavaleiro" -> {
                    if (troca == 0) {
                        troca = 1;
                        valorBonus1 = "A";
                        valorBonus2 = "A";
                        valorAgilidadeB += 2;
                        valorFortitudeB -= 2;
                        MSGtroca = "Agilidade + 2";
                    }
                    else if (troca == 1) {
                        troca = 0;
                        valorBonus1 = "F";
                        valorBonus2 = "F";
                        valorFortitudeB += 2;
                        valorAgilidadeB -= 2;
                        MSGtroca = "Fortitude + 2";
                    }
                }
                default -> {
                }
            }
        
        
       
       jButton3.setText(String.valueOf(MSGtroca));
       jLabel11.setText(String.valueOf(valorMente + valorMenteB ));
       jLabel12.setText(String.valueOf(valorAgilidade + valorAgilidadeB));
       jLabel13.setText(String.valueOf(valorSentidos + valorSentidosB));
       jLabel14.setText(String.valueOf(valorFortitude + valorFortitudeB));
       jLabel15.setText(String.valueOf(valorPoder + valorPoderB));
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        
        fichaPersonagemBack ficha = new fichaPersonagemBack();
        String nome = valorNome.getText();
        String idade = valorIdade.getText();
        String genero = valorGenero.getText();
        String aparencia = valorAparencia.getText().replace("\n"," ");
        int mente = valorMente + valorMenteB;
        int fortitude = valorFortitude + valorFortitudeB;
        int agilidade = valorAgilidade + valorAgilidadeB;
        int poder = valorPoder + valorPoderB;
        int sentidos = valorSentidos + valorSentidosB;
        String classeEscolhida = (String) jComboBox1.getSelectedItem();
        String percursoEscolhido = (String) jComboBox2.getSelectedItem();
        List<String> selecionados = new ArrayList<>();
        if (jCheckBox1.isSelected()) selecionados.add("aspecto1.txt");
        if (jCheckBox2.isSelected()) selecionados.add("aspecto2.txt");
        if (jCheckBox3.isSelected()) selecionados.add("aspecto3.txt");
        if (jCheckBox4.isSelected()) selecionados.add("aspecto4.txt");
        if (jCheckBox5.isSelected()) selecionados.add("aspecto5.txt");
        if (jCheckBox6.isSelected()) selecionados.add("aspecto6.txt");
        String escolha1 = selecionados.get(0);
        String escolha2 = selecionados.get(1);
        int vitalidade = ficha.calcularVitalidadeINIT(fortitude);
        int ether = ficha.calcularEtherINIT(poder);
        int PA = 2 + (agilidade/2);
        int esquiva = agilidade*4;
        int bloqueio = fortitude*4;
        if(atributos != 0 || classeEscolhida == null ||percursoEscolhido == null || escolha1 == null || escolha2 == null || nome == null || idade == null || genero == null || aparencia == null){
   
    }
    else{
        ficha.setNome(nome);
        ficha.setIdade(idade);
        ficha.setGenero(genero);
        ficha.setAparencia(aparencia);
        ficha.setMente(mente);
        ficha.setFortitude(fortitude);
        ficha.setAgilidade(agilidade);
        ficha.setPoder(poder);
        ficha.setSentidos(sentidos);
        ficha.setClasse(classeEscolhida);
        ficha.setPercurso(percursoEscolhido);    
        ficha.setAspecto1(escolha1);
        ficha.setAspecto2(escolha2);
        ficha.setVitalidade(vitalidade);
        ficha.setEther(ether);
    
        ficha.setPontos_acao(PA);
        ficha.setEsquiva(esquiva);
        ficha.setBloqueio(bloqueio);
        ficha.setNivel_nucleo(0);
        try {
            FileWriter escritor = new FileWriter("personagens.txt", true);
            String nome2 = "\n" + nome;
            escritor.write(nome2);
            escritor.close();
        } catch (IOException ex) {
            Logger.getLogger(CriarPersonagem1.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
        
        String caminho = "personagensP/" + nome + ".txt";
        try {
        ficha.salvarEmArquivo(caminho);
            } 
        catch (IOException ex) {
        Logger.getLogger(CriarPersonagem1.class.getName()).log(Level.SEVERE, null, ex);
        }
        new telaInicialSelecao().setVisible(true);
        this.dispose();
        }
    
    }//GEN-LAST:event_jButton4ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CriarPersonagem1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CriarPersonagem1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CriarPersonagem1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CriarPersonagem1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new CriarPersonagem1().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton adicionarMente;
    private javax.swing.JButton aumentarAgilidade;
    private javax.swing.JButton aumentarFortitude;
    private javax.swing.JButton aumentarPoder;
    private javax.swing.JButton aumentarSentidos;
    private javax.swing.JButton diminuirAgilidade;
    private javax.swing.JButton diminuirFortitude;
    private javax.swing.JButton diminuirMente;
    private javax.swing.JButton diminuirPoder;
    private javax.swing.JButton diminuirSentidos;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JCheckBox jCheckBox3;
    private javax.swing.JCheckBox jCheckBox4;
    private javax.swing.JCheckBox jCheckBox5;
    private javax.swing.JCheckBox jCheckBox6;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea valorAparencia;
    private javax.swing.JTextField valorGenero;
    private javax.swing.JTextField valorIdade;
    private javax.swing.JTextField valorNome;
    // End of variables declaration//GEN-END:variables
}
